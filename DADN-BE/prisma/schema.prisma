// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int          @id @default(autoincrement())
  email      String       @unique
  fullName   String
  age        Int
  password   String
  Automation Automation[]
  DashBoard  DashBoard?
  Device     Device[]
}

model Device {
  id        Int        @id @default(autoincrement())
  userId    Int
  User      User       @relation(fields: [userId], references: [id])
  LightBulb LightBulb?
  TVRemote  TVRemote?
  Phone     Phone?
}

model LightBulb {
  id       Int    @id @default(autoincrement())
  battery  Int
  mode     Int
  light    Int
  deviceId Int    @unique
  device   Device @relation(fields: [deviceId], references: [id])
}

model TVRemote {
  id       Int    @id @default(autoincrement())
  battery  Int
  mode     Int
  deviceId Int    @unique
  device   Device @relation(fields: [deviceId], references: [id])
}

model Phone {
  id       Int    @id @default(autoincrement())
  battery  Int
  mode     Int
  deviceId Int    @unique
  device   Device @relation(fields: [deviceId], references: [id])
}

model Automation {
  id             Int              @id @default(autoincrement())
  userId         Int
  User           User             @relation(fields: [userId], references: [id])
  AutomationTask AutomationTask[]
}

model AutomationTask {
  id           Int        @id @default(autoincrement())
  automationId Int
  automation   Automation @relation(fields: [automationId], references: [id])
  taskname     String
  time         DateTime
  repeat       REPEAT     @default(EVERYDAY)
}

model Sensor {
  id          Int @id @default(autoincrement())
  humidity    Int
  light       Int
  temperature Int
}

model DashBoard {
  id            Int             @id @default(autoincrement())
  userId        Int             @unique
  user          User            @relation(fields: [userId], references: [id])
  DashBoardInfo DashBoardInfo[]
}

model DashBoardInfo {
  id          Int       @id @default(autoincrement())
  dashboardId Int
  dashboard   DashBoard @relation(fields: [dashboardId], references: [id])
  humidity    Int
  light       Int
  temperature Int
}

enum REPEAT {
  EVERYDAY
  EVERYWEEKEND
}
